@model EcardModelItem<OpenAccount>                                 
     <div class="place">
    <span>位置：</span>
    <ul class="placeul">
    <li><a href="#">首页</a></li>
    <li><a href="#">@Model.Localize("title")</a></li>
    </ul>
</div>
<div class="formbody">
    
    <ul class="forminfo" id="accountInput">
    <li><label>请输入卡号</label><input tabindex="1"  maxlength="@Model.Site.AccountNameLength" value="" data-field="accountName" id="currentNumber" type="text" class="scinput InputSerach"><input type="hidden" id="currentToken" value="@Model.Site.AccountToken" data-field="accountToken" /></li>
    <li><label>用户姓名</label><input id="currentDisplayName" tabindex="1" value="" data-field="displayName" type="text" class="scinput InputSerach"></li>

     <li><label>手机号码</label><input  type="text" id="currentMobile" tabindex="1" value="" data-field="mobile" class="scinput InputSerach"><i> <a class=""  onclick="checkMs()" data-smscode="#currentMobile" data-smsuser="#currentDisplayName" href='#'>
                        校验 </a></i></li>
        <li><label>验证码</label><input  id="currentCode" tabindex="1" value="" data-field="code" type="text" class="scinput InputSerach"></li>
           <li><label>性 别</label>
           
           <div class="vocation">
<div class="uew-select">
    <div class="uew-select-value ue-state-default" style="width: 118px;">
  
    <em class="uew-select-text">男</em><em class="uew-icon uew-icon-triangle-1-s"></em></div>
  
    <select class="select1" id="currentGender" tabindex="1" value="" data-field="gender">
    <option value="1">男</option>
                        <option value="2">女</option>
</select>
    </div>
    </div></li>     
 <li><label>身份证号</label><input  id="currentIdentify" tabindex="1" maxlength="18" value="" data-field="identify" type="text" class="scinput InputSerach"></li>
 
 
 <li><label>出生日期</label><input  id="currentBirthDate" tabindex="1" value="" data-field="birthDate" type="text"  onfocus="WdatePicker({startDate:'%y-%M-01 00:00:00',dateFmt:'yyyy-MM-dd HH:mm:ss',alwaysUseStartDate:true})" class="Wdate scinput"></li>
      
      
             
             <li><label>销售员</label>
           
           <div class="vocation">
<div class="uew-select">
    <div class="uew-select-value ue-state-default" style="width: 118px;">
  
    <em class="uew-select-text"> @(Model.Item.Sales != null && Model.Item.Sales.Count>0?Model.Item.Sales[0].DisplayName:"")</em><em class="uew-icon uew-icon-triangle-1-s"></em></div>
  
    <select class="select1" tabindex="1" value="" data-field="saleId">
      @foreach (var sale in Model.Item.Sales)
                            {
                                <option value="@sale.UserId">@sale.DisplayName</option>
                            }
</select>
    </div>
    </div></li>  



                 <li><label> @Model.Localize("HowToDeal.Name")</label>
           
           <div class="vocation">
<div class="uew-select">
    <div class="uew-select-value ue-state-default" style="width: 118px;">
  
    <em class="uew-select-text">@(Model.Item.DealWays != null && Model.Item.DealWays.Count>0?Model.Item.DealWays[0].DisplayName:"")</em><em class="uew-icon uew-icon-triangle-1-s"></em></div>
  
    <select class="select1" id="currentGender" tabindex="1" value="" data-field="howToDeal">
     @foreach (var dealWay in Model.Item.DealWays)
                                {
                                    <option value="@dealWay.DealWayId">@dealWay.DisplayName</option>
                                }
</select>
    </div>
    </div></li> 
  


           
           
            <li><label>是否激活</label><input  type="checkbox" tabindex="8" checked="checked"  name="Field4" data-field="isActived"  style="margin-top:10px;"></li>
            <li><label>初始化密码</label><input  type="checkbox"  checked="checked" id="StartPwd"  name="StartPwd" style="margin-top:10px;" ></li>
             <li><label>备注</label><textarea name="" cols="15" data-field="Remark1" rows="" class="textinput"></textarea></li>

   
   
    <li><label>&nbsp;</label><button class="btn" href="../Account/open"  data-waiting-message='@Model.Localize("waitingForCommunicate")'>@Model.Localize("create.Text")</button></li>
    
    

   
       <li><label>&nbsp;</label> <p id="numbermsg">
                </p></li>
                <li  style="border-bottom-style: solid; border-bottom-width: thin; border-bottom-color: #99CCFF;
                    border-top-style: solid; border-top-width: thin; border-top-color: #99CCFF;"
                    align="center">
                
                  
                   
                
                 <table >
                 <tr>
                 <td >&nbsp; </td><td>费用信息 </td>
                 </tr>
           
        <tr>
            <td >
                <label>
                    合 计:
                </label>
            </td>
            <td >
                <input type="text" disabled="disabled" tabindex="1" maxlength="255" value="" id="totalFee"
                    class="scinput InputSerach">
            </td>
        </tr>
        <tr>
            <td >
                <label>
                    收取押金:
                </label>
            </td>
            <td >
                <input type="text" id="DepositAmount" data-field="DepositAmount" disabled="disabled" tabindex="1" maxlength="255"
                    value="" class="scinput InputSerach">
            </td>
        </tr>
        <tr>
            <td >
                <label>
                    卡内余额:
                </label>
            </td>
            <td >
                <input type="text" id="Amount" data-field="Amount" disabled="disabled" tabindex="1" maxlength="255"
                    value="" class="scinput InputSerach">
            </td>
        </tr>
        <tr>
            <td >
                <label>
                    售卡金额:
                </label>
            </td>
            <td >
                <input type="text" id="SaleFee" data-field="SaleFee" disabled="disabled" tabindex="1" maxlength="255"
                    value="" class="scinput InputSerach">
            </td>
            <input type="hidden" id="currentToken" value="@Model.Site.AccountToken" data-field="accountToken" />
        </tr>
    </table>
                
                
                </li>
    
    </ul>
    
  
    </div>




                
              
                 
                
                  
                  
                  
           










<script  type="text/javascript">

 var _time = 60;
   //设置验证码倒计时时间
    //验证码倒计时
    function PhoneCodeTime() {
        //将手机设置为不可点击
        $("[data-smscode]").attr("onClick", "");
        _time = parseInt(_time, 10);
        _time--;
        if (_time < 1) {
            $("[data-smscode]").attr("onClick", "checkMs()");
            $("[data-smscode]").text("校验");
        }
        else {
            $("[data-smscode]").text("请在" + _time + "秒后获取");
        }
    }

    function checkMs(){
        _time=60;
        var mobile = $("#currentMobile").val();
        if (!mobile) {
            alert("请先输入手机号码！");
            return;
        }
        var displayName = $("#currentDisplayName").val();
       var url_link=String.format("/Utility/SendSmsCode?number={0}&username={1}&tm={2}", mobile, displayName, new Date());
        $.get(url_link, function (data) {
            setInterval("PhoneCodeTime()", 1000);
        });
    }
    
$(function(){
//        $("#currentIdentify").bind("blur", function (evt) {
//            var birthdate = $("#currentBirthDate").val();
//            if (birthdate.length == 0) {
//                $("#currentBirthDate").val(Date.fromIdentity($(this).val()));
//            }
//        });
        function bind(data) {

            //$("#accountInfo").bindfrom(data);
            $("#feeInfo").bindfrom(data);

            var total = data.Amount + data.SaleFee + data.DepositAmount;
            if (isNaN(total))
            {
                $("#totalFee").val("");
                $("#Amount").val("");
                $("#SaleFee").val("");
                $("#DepositAmount").val("");
            }
            else
            {
                $("#totalFee").val(total);
                $("#Amount").val(data.Amount);
                $("#SaleFee").val(data.SaleFee);
                $("#DepositAmount").val(data.DepositAmount);
            }
        }
        var msgbox = $("#numbermsg");
        var btn = $("button");
        msgbox.text('@Model.Localize("waitingForInsertCard")'); 
        $(function () {
            btn.click(function (e) {
                msgbox.css("color", "red");
                bind({});
                e.preventDefault();
                var $this = $(this);
                var account = readAccount();
                if (account == null) {
                    msgbox.text('@Model.Localize("failToReadAccount")');
                    return;
                }
                if (account.accountName) {
                    $("#currentNumber").val(account.accountName);
                    $("#currentToken").val(account.accountToken);
                }
                account = $("#accountInput").bindto();
                if (account.accountName.trim() == "") {
                    msgbox.text('@Model.Localize("pleaseInputAccountName")');
                    return;
                }
                $this.attr("disabled", "disabled");
                msgbox.css("color", "");

                $("#saleFee").val("");

                var url = $this.attr("href");
                var func = function(password1, password2) {
                    account.Password = password1;
                    account.PasswordConfirm = password2;
                    $.post(url, account, function(data) {
                        if (data.Code != 0) {
                            alert(data.CodeText);
                            msgbox.text(data.CodeText + ",@Model.Localize("fail")");
                        }
                        else {
                            msgbox.text('@Model.Localize("success")');
                            msgbox.css("color", "green");
                            bind(data);
                           // printTicket(data.CodeText);
                           alert(data.CodeText);
                            $("#accountInput").bindfrom({ isActived: true, accountToken: '@Model.Site.AccountToken' });
                        }
                        $this.attr("disabled", false);
                        fideOutDiv();
                    });
                };
                var cancel = function() {
                    $this.attr("disabled", false);
                };
                if($("#StartPwd").attr("checked")==true){
                    confirmPassword(func, cancel);
                } else {
                    func("");
                }
            });
      });
 })(jQuery);

</script>






     